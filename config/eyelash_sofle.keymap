#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <300>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <300>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        nolayer-down {
            bindings = <&kp DOWN>;
            key-positions = <34 35>;
            layers = <0>;
        };

        nolayer-uparrow {
            bindings = <&kp UP>;
            key-positions = <21 22>;
            layers = <0>;
        };

        nolayer-left {
            bindings = <&kp LEFT>;
            key-positions = <34 33>;
            layers = <0>;
        };

        nolayer-right {
            bindings = <&kp RIGHT>;
            key-positions = <35 36>;
            layers = <0>;
        };

        fast-spotlight {
            bindings = <&kp LG(SPACE)>;
            key-positions = <60 56>;
            layers = <0>;
        };

        legacy-escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 0>;
            layers = <0>;
        };

        fat-enter {
            bindings = <&kp ENTER>;
            key-positions = <50 51>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE   &kp N1     &kp N2        &kp N3            &kp N4       &kp N5                &kp UP_ARROW     &kp N6               &kp N7       &kp N8             &kp N9     &kp N0         &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp F             &kp P        &kp B                 &kp DOWN_ARROW   &kp J                &kp L        &kp U              &kp Y      &kp SEMICOLON  &kp BSLH
&kp ESCAPE  &kp A      &kp R         &kp S             &kp T        &kp G                 &kp LEFT_ARROW   &kp K                &kp N        &kp E              &kp I      &kp O          &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C             &kp D        &kp V                 &kp RIGHT_ARROW  &kp M                &kp H        &kp COMMA          &kp DOT    &kp FSLH       &mt RIGHT_SHIFT ENTER
&kp C_MUTE  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 2 SPACE  &lt 2 LEFT_BRACKET    &kp ENTER        &lt 1 RIGHT_BRACKET  &lt 1 SPACE  &kp RIGHT_COMMAND  &kp MINUS  &kp EQUAL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Base";
        };

        lower_layer {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "Lower";
            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "Raise";
        };

        extra_1 { status = "reserved"; };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
    };
};
